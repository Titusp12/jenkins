netstat -anp | grep 8089
netstat -anp | grep LISTEN
...................
to remove password
cd jenkins
vi config.xml ---<usesecurity>false
.................
advantage of pipeline
1. COmpilation
2. Simple static analysis (parallel with compilation) 
3. Unit tests
4. Integrations tests (parallel with unit tests)
5. Deployment
sonar qube--pipeline linked with unit testing 
Declarative Pipeline -- write a script in a format of a file and keep in a repo
Scripted Pipeline -- write the script inside jenkins job 
.....................
pipeline
defn: pipeline from SCM
.................
but lets try 
.............
inside .git 
git remote add origin (link)
git remote set-url origin (link)

which git --will show the path of git
.....................

go to pipeline syntax and add the git url in repo URL
add jenkins
2. click on add jenkins credentials
3. Domain: global credentials
4. kind: username with password
5. Scope: global (jenkins, nodes, items, all chitld items, etc)
6. add the url and 
vi config
.............
sh "docker build -t (dockerhubusername)/testimage ."
====================================================================================================

ci
incremental build 
development- putting war file in test server
delivery--putting war file in PROD
netstat -ntlp --- to see ports 


sshpass -p --> 
vi .bashrc --
at last-> export MAVEN_HOME=path(home/user/apache:maven)
export PATH=${MAVEN_HOME}/bin:${PATH}

jfrog
nexus--binary storage
================================================================================================

i have installed inside opt
maven installation page:
http://apache.mirrors.pair.com/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz

vi /etc/profile.d/maven.sh -- add empty maven.sh
sudo chmod 755 maven.sh

export M2_HOME=/home/pravin544/maven
export PATH=${M2_HOME}/bin/:${PATH}
export M2_HOME=/opt/apache-maven-3.6.0
export PATH=${M2_HOME}/bin/:${PATH}

inside user vi .bashrc add up two path and save

source /etc/profile.d/maven.sh -- source is to synchronize new changes with kernel

  472  mkdir /home/ec2-user/myapp/
  473  cd /home/ec2-user/myapp/
  474  mvn archetype:generate
  475  ls -lartcd 
  476  cd sampleapp/
  477  ls
  478  mvn clean compile
  479  java -version
  480  history
view jenkinsfile in addressbook

1169

mvn clean --- target folder is not there
mvn compile --target folder is there

every time change the snapshot version
1.0 
1.1 

mvn compile package
sudo yum install java-1.8.0-openjdk-devel -y .
